name: deploy

on:
  pull_request:
    branches:
      - main
    types: [closed]

env:
  AWS_REGION: ap-northeast-1
  PROMPTHUB_FRONT_SERVICE: prompthub-front-service
  PROMPTHUB_API_SERVICE: prompthub-api-service
  FRONT_CONTAINER_NAME: prompthub-front-container
  API_CONTAINER_NAME: prompthub-api-container
  FRONT_IMAGE_NAME: prompthub-front
  API_IMAGE_NAME: prompthub-api
  API_TAG: 0.0.5
  FRONT_TAG: 0.0.5

jobs:
  deploy:
    name: deploy
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: build and push front to ECR
      id: build-image-front
      env:
        WORKDIR: app
        FRONT_PORT: 8080
        API_PORT: 3000
        API_URL: https://api.prompthub-beginners.com
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      run: |
        cd front
        docker build -t $FRONT_IMAGE_NAME:latest \
          --build-arg WORKDIR=$WORKDIR \
          --build-arg API_PORT=$API_PORT \
          --build-arg FRONT_PORT=$FRONT_PORT \
          --build-arg API_URL=$API_URL \
          .
        docker tag $FRONT_IMAGE_NAME:latest $ECR_REGISTRY/$FRONT_IMAGE_NAME:$FRONT_TAG
        docker tag $FRONT_IMAGE_NAME:latest $ECR_REGISTRY/$FRONT_IMAGE_NAME:latest
        docker push $ECR_REGISTRY/$FRONT_IMAGE_NAME:$FRONT_TAG
        docker push $ECR_REGISTRY/$FRONT_IMAGE_NAME:latest

    - name: build and push api to ECR
      id: build-image-api
      env:
        WORKDIR: app
        API_PORT: 3000
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      run: |
        cd api
        docker build -t $API_IMAGE_NAME:latest \
          --build-arg WORKDIR=$WORKDIR \
          --build-arg API_PORT=$API_PORT \
          .
        docker tag $API_IMAGE_NAME:latest $ECR_REGISTRY/$API_IMAGE_NAME:$API_TAG
        docker tag $API_IMAGE_NAME:latest $ECR_REGISTRY/$API_IMAGE_NAME:latest
        docker push $ECR_REGISTRY/$API_IMAGE_NAME:$API_TAG
        docker push $ECR_REGISTRY/$API_IMAGE_NAME:latest

    - name: Deploy to ECS
      run: |
        aws ecs update-service --cluster prompthub-cluster --service $PROMPTHUB_FRONT_SERVICE --force-new-deployment --desired-count 1
        aws ecs update-service --cluster prompthub-cluster --service $PROMPTHUB_API_SERVICE --force-new-deployment --desired-count 1